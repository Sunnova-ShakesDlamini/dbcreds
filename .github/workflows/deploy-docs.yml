# .github/workflows/deploy-docs.yml
name: Deploy Documentation

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - 'README.md'
      - '.github/workflows/deploy-docs.yml'
      - 'pyproject.toml'  # In case dependencies change
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for git info
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Match your local Python version
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Install MkDocs and all themes/plugins
          pip install mkdocs
          pip install mkdocs-material
          pip install mkdocstrings[python]
          pip install pymdown-extensions
          # Install additional dependencies if you use them
          # pip install mkdocs-macros-plugin
          # pip install mike  # for versioning
          
          # Install dbcreds package if needed for API docs
          # pip install -e .
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Build with MkDocs
        run: |
          mkdocs build --clean
          # Create .nojekyll file to ensure GitHub Pages processes files correctly
          touch site/.nojekyll
        env:
          SITE_URL: ${{ steps.pages.outputs.base_url }}
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4